import { ZODIAC_SIGNS } from "../utils/constants.js";
import { ApiService } from "../services/apiService.js";
import logger from "../utils/logger.js";
import { getCachedHoroscope, cacheHoroscope } from "./horoscopeCache.js";

// Energy day templates (used as a fallback)
const energyTemplates = [
  "–°–µ–≥–æ–¥–Ω—è –≤—ã –ø–æ—á—É–≤—Å—Ç–≤—É–µ—Ç–µ –ø—Ä–∏–ª–∏–≤ —Å–∏–ª –∏ —ç–Ω–µ—Ä–≥–∏–∏. –û—Ç–ª–∏—á–Ω—ã–π –¥–µ–Ω—å –¥–ª—è –∞–∫—Ç–∏–≤–Ω—ã—Ö –¥–µ–ª.",
  "–î–µ–Ω—å –º–æ–∂–µ—Ç –æ–∫–∞–∑–∞—Ç—å—Å—è —É—Ç–æ–º–∏—Ç–µ–ª—å–Ω—ã–º. –ü–æ—Å—Ç–∞—Ä–∞–π—Ç–µ—Å—å –±–µ—Ä–µ—á—å —Å–∏–ª—ã –∏ –Ω–µ –ø–µ—Ä–µ–Ω–∞–ø—Ä—è–≥–∞—Ç—å—Å—è.",
  "–í–∞—à–∞ —ç–Ω–µ—Ä–≥–∏—è —Å–µ–≥–æ–¥–Ω—è –Ω–∞ —Å—Ä–µ–¥–Ω–µ–º —É—Ä–æ–≤–Ω–µ. –†–∞–≤–Ω–æ–º–µ—Ä–Ω–æ —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–∏—Ç–µ –Ω–∞–≥—Ä—É–∑–∫—É.",
  "–°–µ–≥–æ–¥–Ω—è—à–Ω–∏–π –¥–µ–Ω—å –Ω–∞–ø–æ–ª–Ω–∏—Ç –≤–∞—Å –∂–∏–∑–Ω–µ–Ω–Ω–æ–π —Å–∏–ª–æ–π. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —ç—Ç—É —ç–Ω–µ—Ä–≥–∏—é —Å –ø–æ–ª—å–∑–æ–π.",
  "–î–µ–Ω—å –ø–æ—Ç—Ä–µ–±—É–µ—Ç –æ—Ç –≤–∞—Å –±–æ–ª—å—à–æ–π –≤—ã–¥–µ—Ä–∂–∫–∏. –í–æ–∑–º–æ–∂–Ω–∞ –ø–æ–≤—ã—à–µ–Ω–Ω–∞—è —É—Ç–æ–º–ª—è–µ–º–æ—Å—Ç—å.",
];

// Love and relationships templates (used as a fallback)
const loveTemplates = [
  "–í –ª–∏—á–Ω—ã—Ö –æ—Ç–Ω–æ—à–µ–Ω–∏—è—Ö –≤–∞—Å –∂–¥–µ—Ç –≥–∞—Ä–º–æ–Ω–∏—è –∏ –≤–∑–∞–∏–º–æ–ø–æ–Ω–∏–º–∞–Ω–∏–µ. –û—Ç–ª–∏—á–Ω—ã–π –¥–µ–Ω—å –¥–ª—è —Ä–æ–º–∞–Ω—Ç–∏–∫–∏.",
  "–í–æ–∑–º–æ–∂–Ω—ã –Ω–µ–±–æ–ª—å—à–∏–µ —Ä–∞–∑–Ω–æ–≥–ª–∞—Å–∏—è —Å –ø–∞—Ä—Ç–Ω–µ—Ä–æ–º. –ü—Ä–æ—è–≤–∏—Ç–µ —Ç–µ—Ä–ø–µ–Ω–∏–µ –∏ –ø–æ–Ω–∏–º–∞–Ω–∏–µ.",
  "–û–¥–∏–Ω–æ–∫–∏—Ö –ø—Ä–µ–¥—Å—Ç–∞–≤–∏—Ç–µ–ª–µ–π –∑–Ω–∞–∫–∞ –º–æ–∂–µ—Ç –∂–¥–∞—Ç—å –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ–µ –∑–Ω–∞–∫–æ–º—Å—Ç–≤–æ.",
  "–û—Ç–ª–∏—á–Ω—ã–π –¥–µ–Ω—å –¥–ª—è –æ—Ç–∫—Ä–æ–≤–µ–Ω–Ω–æ–≥–æ —Ä–∞–∑–≥–æ–≤–æ—Ä–∞ —Å –±–ª–∏–∑–∫–∏–º —á–µ–ª–æ–≤–µ–∫–æ–º.",
  "–°–µ–≥–æ–¥–Ω—è —Å—Ç–æ–∏—Ç —É–¥–µ–ª–∏—Ç—å –±–æ–ª—å—à–µ –≤–Ω–∏–º–∞–Ω–∏—è –ª—é–±–∏–º–æ–º—É —á–µ–ª–æ–≤–µ–∫—É.",
];

// Finance and career templates (used as a fallback)
const financeTemplates = [
  "–ë–ª–∞–≥–æ–ø—Ä–∏—è—Ç–Ω—ã–π –¥–µ–Ω—å –¥–ª—è —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã—Ö –æ–ø–µ—Ä–∞—Ü–∏–π. –í–æ–∑–º–æ–∂–Ω—ã –Ω–µ–æ–∂–∏–¥–∞–Ω–Ω—ã–µ –¥–µ–Ω–µ–∂–Ω—ã–µ –ø–æ—Å—Ç—É–ø–ª–µ–Ω–∏—è.",
  "–í —Ä–∞–±–æ—á–∏—Ö –≤–æ–ø—Ä–æ—Å–∞—Ö –ø—Ä–æ—è–≤–∏—Ç–µ –æ—Å—Ç–æ—Ä–æ–∂–Ω–æ—Å—Ç—å. –ù–µ —Å–∞–º—ã–π —É–¥–∞—á–Ω—ã–π –¥–µ–Ω—å –¥–ª—è –∫—Ä—É–ø–Ω—ã—Ö —Å–¥–µ–ª–æ–∫.",
  "–í–∞—à–∞ –∫–∞—Ä—å–µ—Ä–∞ –º–æ–∂–µ—Ç –ø–æ–ª—É—á–∏—Ç—å –Ω–æ–≤—ã–π –∏–º–ø—É–ª—å—Å. –ë—É–¥—å—Ç–µ –æ—Ç–∫—Ä—ã—Ç—ã –¥–ª—è –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π.",
  "–§–∏–Ω–∞–Ω—Å–æ–≤–æ–µ –ø–æ–ª–æ–∂–µ–Ω–∏–µ —Å—Ç–∞–±–∏–ª—å–Ω–æ. –•–æ—Ä–æ—à–∏–π –¥–µ–Ω—å –¥–ª—è –ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è –±—é–¥–∂–µ—Ç–∞.",
  "–í–æ–∑–º–æ–∂–Ω—ã –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–µ –≤—ã–∑–æ–≤—ã. –ü—Ä–æ—è–≤–∏—Ç–µ —Å–≤–æ–∏ –ª—É—á—à–∏–µ –∫–∞—á–µ—Å—Ç–≤–∞.",
];

// Advice templates (used as a fallback)
const adviceTemplates = [
  "–ü—Ä–∏—Å–ª—É—à–∏–≤–∞–π—Ç–µ—Å—å –∫ —Å–≤–æ–µ–π –∏–Ω—Ç—É–∏—Ü–∏–∏, –æ–Ω–∞ –Ω–µ –ø–æ–¥–≤–µ–¥–µ—Ç.",
  "–£–¥–µ–ª–∏—Ç–µ –≤–Ω–∏–º–∞–Ω–∏–µ —Å–≤–æ–µ–º—É –∑–¥–æ—Ä–æ–≤—å—é, –æ—Å–æ–±–µ–Ω–Ω–æ –ø–∏—Ç–∞–Ω–∏—é.",
  "–ù–µ —Ç–æ—Ä–æ–ø–∏—Ç–µ—Å—å —Å –ø—Ä–∏–Ω—è—Ç–∏–µ–º –≤–∞–∂–Ω—ã—Ö —Ä–µ—à–µ–Ω–∏–π, –≤—Å–µ —Ç—â–∞—Ç–µ–ª—å–Ω–æ –æ–±–¥—É–º–∞–π—Ç–µ.",
  "–ü—Ä–æ–≤–µ–¥–∏—Ç–µ –≤–µ—á–µ—Ä –≤ –∫—Ä—É–≥—É –±–ª–∏–∑–∫–∏—Ö –ª—é–¥–µ–π, —ç—Ç–æ –∑–∞—Ä—è–¥–∏—Ç –≤–∞—Å –ø–æ–∑–∏—Ç–∏–≤–Ω–æ–π —ç–Ω–µ—Ä–≥–∏–µ–π.",
  "–ó–∞–π–º–∏—Ç–µ—Å—å —Å–∞–º–æ—Ä–∞–∑–≤–∏—Ç–∏–µ–º, –ø–æ—á–∏—Ç–∞–π—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å–Ω—É—é –∫–Ω–∏–≥—É –∏–ª–∏ –ø–æ—Å–º–æ—Ç—Ä–∏—Ç–µ –ø–æ–∑–Ω–∞–≤–∞—Ç–µ–ª—å–Ω—ã–π —Ñ–∏–ª—å–º.",
];

/**
 * Generates a random horoscope from local templates for the specified zodiac sign
 * @param {string} zodiacSign - Zodiac sign
 * @returns {Object} Object with horoscope
 */
const generateLocalHoroscope = zodiacSign => {
  logger.info(`Generating local horoscope for ${zodiacSign}`);

  const energy = energyTemplates[Math.floor(Math.random() * energyTemplates.length)];
  const love = loveTemplates[Math.floor(Math.random() * loveTemplates.length)];
  const finance = financeTemplates[Math.floor(Math.random() * financeTemplates.length)];
  const advice = adviceTemplates[Math.floor(Math.random() * adviceTemplates.length)];

  return {
    sign: zodiacSign,
    date: new Date().toISOString().split("T")[0],
    energy,
    love,
    finance,
    advice,
  };
};

/**
 * Generates a horoscope for the specified zodiac sign, using API or local data
 * @param {string} zodiacSign - Zodiac sign
 * @returns {Promise<Object>} Object with horoscope
 */
export const generateHoroscope = async zodiacSign => {
  logger.info(`Generating horoscope for ${zodiacSign}`);

  // Check if the horoscope is in the cache
  const cachedHoroscope = getCachedHoroscope(zodiacSign);
  if (cachedHoroscope) {
    logger.info(`Found cached horoscope for ${zodiacSign}`);
    return cachedHoroscope;
  }

  try {
    // Try to get the horoscope from the API
    const apiHoroscope = await ApiService.getHoroscope(zodiacSign);

    // Check if all required fields are present in the API response
    if (
      !apiHoroscope.description ||
      !apiHoroscope.compatibility ||
      !apiHoroscope.mood ||
      !apiHoroscope.color ||
      !apiHoroscope.lucky_number ||
      !apiHoroscope.lucky_time
    ) {
      logger.warn(`Incomplete API response for ${zodiacSign}, using fallback`);
      const fallbackHoroscope = await getFallbackHoroscope(zodiacSign);
      cacheHoroscope(zodiacSign, fallbackHoroscope);
      return fallbackHoroscope;
    }

    logger.info(`Successfully retrieved API horoscope for ${zodiacSign}`);

    // Form the horoscope object, ensuring all fields are present
    const formattedHoroscope = {
      sign: zodiacSign,
      date: apiHoroscope.current_date || new Date().toISOString().split("T")[0],
      dateRange: apiHoroscope.date_range || ApiService.getZodiacDateRange(zodiacSign),
      description: apiHoroscope.description,
      compatibility: apiHoroscope.compatibility,
      mood: apiHoroscope.mood,
      color: apiHoroscope.color,
      luckyNumber: apiHoroscope.lucky_number,
      luckyTime: apiHoroscope.lucky_time,
      // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ –¥–æ–±–∞–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏
      energy: `–≠–Ω–µ—Ä–≥–µ—Ç–∏–∫–∞ –¥–Ω—è: ${apiHoroscope.mood}. ${apiHoroscope.description.split(".")[0]}.`,
      love: `–°–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å —Å–µ–≥–æ–¥–Ω—è: ${apiHoroscope.compatibility}. –≠—Ç–æ —Ö–æ—Ä–æ—à–∏–π –¥–µ–Ω—å –¥–ª—è –æ—Ç–Ω–æ—à–µ–Ω–∏–π.`,
      finance: `–£–¥–∞—á–Ω–æ–µ —á–∏—Å–ª–æ: ${apiHoroscope.lucky_number}. –ë–ª–∞–≥–æ–ø—Ä–∏—è—Ç–Ω–æ–µ –≤—Ä–µ–º—è –¥–ª—è —Ñ–∏–Ω–∞–Ω—Å–æ–≤: ${apiHoroscope.lucky_time}.`,
      advice:
        apiHoroscope.description.split(".").slice(1).join(".").trim() || "–ü—Ä–∏—Å–ª—É—à–∏–≤–∞–π—Ç–µ—Å—å –∫ —Å–µ–±–µ –∏ —Å–≤–æ–∏–º –∂–µ–ª–∞–Ω–∏—è–º.",
    };

    // Save to cache
    cacheHoroscope(zodiacSign, formattedHoroscope);

    return formattedHoroscope;
  } catch (error) {
    // Write the error and use the fallback
    logger.error(`Error fetching horoscope from API for ${zodiacSign}: ${error.message}`);
    const fallbackHoroscope = await getFallbackHoroscope(zodiacSign);
    cacheHoroscope(zodiacSign, fallbackHoroscope);
    return fallbackHoroscope;
  }
};

/**
 * Gets a fallback horoscope when the API is unavailable
 * @param {string} zodiacSign - Zodiac sign
 * @returns {Promise<Object>} Object with horoscope
 */
const getFallbackHoroscope = async zodiacSign => {
  try {
    // First try to get the horoscope from the fallback API
    const fallbackHoroscope = await ApiService.getFallbackHoroscope(zodiacSign);
    return fallbackHoroscope;
  } catch (fallbackError) {
    // In case of an error and in the fallback API, use local templates
    logger.error(`Error in fallback API, using local templates: ${fallbackError.message}`);
    return generateLocalHoroscope(zodiacSign);
  }
};

/**
 * Formats the horoscope for sending to the user
 * @param {Object} horoscope - Horoscope object
 * @returns {string} Formatted horoscope text
 */
export const formatHoroscope = horoscope => {
  // Check if the key fields are present and set default values
  const sign = horoscope.sign || "–≤–∞—à–µ–≥–æ –∑–Ω–∞–∫–∞";
  const date = horoscope.date || new Date().toISOString().split("T")[0];
  const dateRange = horoscope.dateRange || "–¢–µ–∫—É—â–∏–π –¥–µ–Ω—å";

  // Check if this is an extended horoscope from the API or local
  if (horoscope.description) {
    // Formatting for API-horoscope with check for undefined
    return (
      `üåü *–ì–æ—Ä–æ—Å–∫–æ–ø –¥–ª—è ${sign} –Ω–∞ ${date}* üåü\n\n` +
      `üìÖ *–ü–µ—Ä–∏–æ–¥:* ${dateRange}\n\n` +
      `‚ú® *–û–±—â–µ–µ –æ–ø–∏—Å–∞–Ω–∏–µ:*\n${horoscope.description || "–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞"}\n\n` +
      `‚ù§Ô∏è *–°–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å:* ${horoscope.compatibility || "–í—Å–µ –∑–Ω–∞–∫–∏"}\n` +
      `üòä *–ù–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ:* ${horoscope.mood || "–ù–µ–π—Ç—Ä–∞–ª—å–Ω–æ–µ"}\n` +
      `üé® *–°—á–∞—Å—Ç–ª–∏–≤—ã–π —Ü–≤–µ—Ç:* ${horoscope.color || "–†–∞–¥—É–≥–∞"}\n` +
      `üî¢ *–°—á–∞—Å—Ç–ª–∏–≤–æ–µ —á–∏—Å–ª–æ:* ${horoscope.luckyNumber || "7"}\n` +
      `‚è∞ *–°—á–∞—Å—Ç–ª–∏–≤–æ–µ –≤—Ä–µ–º—è:* ${horoscope.luckyTime || "–õ—é–±–æ–µ"}\n\n` +
      `‚ö° *–°–æ–≤–µ—Ç –¥–Ω—è:*\n${horoscope.advice || "–ü—Ä–∏—Å–ª—É—à–∏–≤–∞–π—Ç–µ—Å—å –∫ —Å–µ–±–µ –∏ —Å–≤–æ–∏–º –∂–µ–ª–∞–Ω–∏—è–º"}`
    );
  } else {
    // Formatting for local horoscope with check for undefined
    return (
      `üåü *–ì–æ—Ä–æ—Å–∫–æ–ø –¥–ª—è ${sign} –Ω–∞ ${date}* üåü\n\n` +
      `üî• *–≠–Ω–µ—Ä–≥–∏—è –¥–Ω—è:*\n${horoscope.energy || "–î–µ–Ω—å –±—É–¥–µ—Ç –Ω–∞–ø–æ–ª–Ω–µ–Ω —ç–Ω–µ—Ä–≥–∏–µ–π"}\n\n` +
      `üíñ *–õ—é–±–æ–≤—å –∏ –æ—Ç–Ω–æ—à–µ–Ω–∏—è:*\n${horoscope.love || "–ë–ª–∞–≥–æ–ø—Ä–∏—è—Ç–Ω—ã–π –¥–µ–Ω—å –¥–ª—è –æ—Ç–Ω–æ—à–µ–Ω–∏–π"}\n\n` +
      `üí∞ *–§–∏–Ω–∞–Ω—Å—ã –∏ –∫–∞—Ä—å–µ—Ä–∞:*\n${horoscope.finance || "–°—Ç–∞–±–∏–ª—å–Ω—ã–π –¥–µ–Ω—å –¥–ª—è —Ñ–∏–Ω–∞–Ω—Å–æ–≤"}\n\n` +
      `‚ö° *–°–æ–≤–µ—Ç –¥–Ω—è:*\n${horoscope.advice || "–ü—Ä–∏—Å–ª—É—à–∏–≤–∞–π—Ç–µ—Å—å –∫ –∏–Ω—Ç—É–∏—Ü–∏–∏"}`
    );
  }
};
